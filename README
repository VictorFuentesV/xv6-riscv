## Funcionamiento y lógica de la protección de memoria.
Tenemos tres funcionamientos, el primero es el sistema de permisos en las páginas, lo que nos dice que cada página en memoria tiene permisos controlados por bits en su PTE.
Como segundo funcionamiento tenemos el proceso de traducción de direcciones, el cual tiene como lógica que primero la CPU busca la entrada en el PTE, luego verifica los permisos del mismo y si estos permisos no permiten la operación genera una excepción.
Finalmente tenemos su mecanismo de protección, el cual va orientado de la siguiente manera:
Dirección Virtual -> MMU -> Tabla de Páginas -> Verificación de Permisos -> Acceso/Excepción

## Modificaciones Realizadas y su Lógica
- usys.pl: Se agregaron las entradas de mprotect y munprotect

- syscall.h: Se agregaron las syscall de mprotect y munprotect

- defs.h: Se agregan los prototipos de las funciones mprotect y munprotect

- syscall.c: Se agrega la definición de las syscalls de mprotect y munprotect. También se agrega la implementación de mprotect y munprotect

- user.h: Se agregan los prototipos de mprotect y munprotect

- mprotecttest.c: Se agrega el código de prueba

- Makefile: Se agregan los UPROGS de mprotect y munprotect

## Dificultades encontradas y soluciones implementadas.

# Problemas con el código de prueba, tuvo que ser modificado para ejecutar de buena manera la tarea
